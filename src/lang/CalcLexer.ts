// Generated from ./src/lang/Calc.g4 by ANTLR 4.9.0-SNAPSHOT


import { ATN } from "antlr4ts/atn/ATN";
import { ATNDeserializer } from "antlr4ts/atn/ATNDeserializer";
import { LexerATNSimulator } from "antlr4ts/atn/LexerATNSimulator";
import { CharStream } from "antlr4ts/CharStream";
import { NotNull } from "antlr4ts/Decorators";
import { Override } from "antlr4ts/Decorators";
import { Lexer } from "antlr4ts/Lexer";
import * as Utils from "antlr4ts/misc/Utils";
import { RuleContext } from "antlr4ts/RuleContext";
import { Vocabulary } from "antlr4ts/Vocabulary";
import { VocabularyImpl } from "antlr4ts/VocabularyImpl";


export class CalcLexer extends Lexer {
	public static readonly T__0 = 1;
	public static readonly T__1 = 2;
	public static readonly T__2 = 3;
	public static readonly T__3 = 4;
	public static readonly T__4 = 5;
	public static readonly T__5 = 6;
	public static readonly T__6 = 7;
	public static readonly T__7 = 8;
	public static readonly T__8 = 9;
	public static readonly T__9 = 10;
	public static readonly T__10 = 11;
	public static readonly T__11 = 12;
	public static readonly T__12 = 13;
	public static readonly T__13 = 14;
	public static readonly T__14 = 15;
	public static readonly T__15 = 16;
	public static readonly T__16 = 17;
	public static readonly T__17 = 18;
	public static readonly T__18 = 19;
	public static readonly T__19 = 20;
	public static readonly T__20 = 21;
	public static readonly T__21 = 22;
	public static readonly T__22 = 23;
	public static readonly T__23 = 24;
	public static readonly T__24 = 25;
	public static readonly T__25 = 26;
	public static readonly T__26 = 27;
	public static readonly T__27 = 28;
	public static readonly T__28 = 29;
	public static readonly T__29 = 30;
	public static readonly T__30 = 31;
	public static readonly INTEGER_LITERAL = 32;
	public static readonly BOOLEAN_LITERAL = 33;
	public static readonly REAL_LITERAL = 34;
	public static readonly STRING_LITERAL = 35;
	public static readonly UNIT_LITERAL = 36;
	public static readonly TYPE = 37;
	public static readonly IDENTIFIER = 38;
	public static readonly WHITESPACE = 39;

	// tslint:disable:no-trailing-whitespace
	public static readonly channelNames: string[] = [
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	];

	// tslint:disable:no-trailing-whitespace
	public static readonly modeNames: string[] = [
		"DEFAULT_MODE",
	];

	public static readonly ruleNames: string[] = [
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
		"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24", 
		"T__25", "T__26", "T__27", "T__28", "T__29", "T__30", "INTEGER_LITERAL", 
		"BOOLEAN_LITERAL", "REAL_LITERAL", "STRING_LITERAL", "UNIT_LITERAL", "TYPE", 
		"SYMBOLIC_IDENTIFIER", "ALPHANUMERIC_IDENTIFIER", "IDENTIFIER", "WHITESPACE",
	];

	private static readonly _LITERAL_NAMES: Array<string | undefined> = [
		undefined, "':'", "'*'", "'/'", "'div'", "'mod'", "'+'", "'-'", "'<>'", 
		"'<'", "'>'", "'<='", "'>='", "'='", "'andalso'", "'orelse'", "'^'", "'if'", 
		"'then'", "'else'", "'let'", "'in'", "'end'", "'('", "')'", "'fn'", "'=>'", 
		"';'", "'val'", "'rec'", "'fun'", "'local'", undefined, undefined, undefined, 
		undefined, "'()'",
	];
	private static readonly _SYMBOLIC_NAMES: Array<string | undefined> = [
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, "INTEGER_LITERAL", "BOOLEAN_LITERAL", 
		"REAL_LITERAL", "STRING_LITERAL", "UNIT_LITERAL", "TYPE", "IDENTIFIER", 
		"WHITESPACE",
	];
	public static readonly VOCABULARY: Vocabulary = new VocabularyImpl(CalcLexer._LITERAL_NAMES, CalcLexer._SYMBOLIC_NAMES, []);

	// @Override
	// @NotNull
	public get vocabulary(): Vocabulary {
		return CalcLexer.VOCABULARY;
	}
	// tslint:enable:no-trailing-whitespace


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(CalcLexer._ATN, this);
	}

	// @Override
	public get grammarFileName(): string { return "Calc.g4"; }

	// @Override
	public get ruleNames(): string[] { return CalcLexer.ruleNames; }

	// @Override
	public get serializedATN(): string { return CalcLexer._serializedATN; }

	// @Override
	public get channelNames(): string[] { return CalcLexer.channelNames; }

	// @Override
	public get modeNames(): string[] { return CalcLexer.modeNames; }

	public static readonly _serializedATN: string =
		"\x03\uC91D\uCABA\u058D\uAFBA\u4F53\u0607\uEA8B\uC241\x02)\u0121\b\x01" +
		"\x04\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06" +
		"\x04\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f\x04\r" +
		"\t\r\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04\x12\t" +
		"\x12\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16\x04\x17\t" +
		"\x17\x04\x18\t\x18\x04\x19\t\x19\x04\x1A\t\x1A\x04\x1B\t\x1B\x04\x1C\t" +
		"\x1C\x04\x1D\t\x1D\x04\x1E\t\x1E\x04\x1F\t\x1F\x04 \t \x04!\t!\x04\"\t" +
		"\"\x04#\t#\x04$\t$\x04%\t%\x04&\t&\x04\'\t\'\x04(\t(\x04)\t)\x04*\t*\x03" +
		"\x02\x03\x02\x03\x03\x03\x03\x03\x04\x03\x04\x03\x05\x03\x05\x03\x05\x03" +
		"\x05\x03\x06\x03\x06\x03\x06\x03\x06\x03\x07\x03\x07\x03\b\x03\b\x03\t" +
		"\x03\t\x03\t\x03\n\x03\n\x03\v\x03\v\x03\f\x03\f\x03\f\x03\r\x03\r\x03" +
		"\r\x03\x0E\x03\x0E\x03\x0F\x03\x0F\x03\x0F\x03\x0F\x03\x0F\x03\x0F\x03" +
		"\x0F\x03\x0F\x03\x10\x03\x10\x03\x10\x03\x10\x03\x10\x03\x10\x03\x10\x03" +
		"\x11\x03\x11\x03\x12\x03\x12\x03\x12\x03\x13\x03\x13\x03\x13\x03\x13\x03" +
		"\x13\x03\x14\x03\x14\x03\x14\x03\x14\x03\x14\x03\x15\x03\x15\x03\x15\x03" +
		"\x15\x03\x16\x03\x16\x03\x16\x03\x17\x03\x17\x03\x17\x03\x17\x03\x18\x03" +
		"\x18\x03\x19\x03\x19\x03\x1A\x03\x1A\x03\x1A\x03\x1B\x03\x1B\x03\x1B\x03" +
		"\x1C\x03\x1C\x03\x1D\x03\x1D\x03\x1D\x03\x1D\x03\x1E\x03\x1E\x03\x1E\x03" +
		"\x1E\x03\x1F\x03\x1F\x03\x1F\x03\x1F\x03 \x03 \x03 \x03 \x03 \x03 \x03" +
		"!\x06!\xBF\n!\r!\x0E!\xC0\x03\"\x03\"\x03\"\x03\"\x03\"\x03\"\x03\"\x03" +
		"\"\x03\"\x05\"\xCC\n\"\x03#\x06#\xCF\n#\r#\x0E#\xD0\x03#\x05#\xD4\n#\x03" +
		"#\x06#\xD7\n#\r#\x0E#\xD8\x03#\x03#\x05#\xDD\n#\x03#\x06#\xE0\n#\r#\x0E" +
		"#\xE1\x05#\xE4\n#\x03$\x03$\x03$\x03$\x07$\xEA\n$\f$\x0E$\xED\v$\x03$" +
		"\x03$\x03%\x03%\x03%\x03&\x03&\x03&\x03&\x03&\x03&\x03&\x03&\x03&\x03" +
		"&\x03&\x03&\x03&\x03&\x03&\x03&\x03&\x03&\x03&\x03&\x03&\x05&\u0109\n" +
		"&\x03\'\x06\'\u010C\n\'\r\'\x0E\'\u010D\x03(\x03(\x07(\u0112\n(\f(\x0E" +
		"(\u0115\v(\x03)\x03)\x05)\u0119\n)\x03*\x06*\u011C\n*\r*\x0E*\u011D\x03" +
		"*\x03*\x02\x02\x02+\x03\x02\x03\x05\x02\x04\x07\x02\x05\t\x02\x06\v\x02" +
		"\x07\r\x02\b\x0F\x02\t\x11\x02\n\x13\x02\v\x15\x02\f\x17\x02\r\x19\x02" +
		"\x0E\x1B\x02\x0F\x1D\x02\x10\x1F\x02\x11!\x02\x12#\x02\x13%\x02\x14\'" +
		"\x02\x15)\x02\x16+\x02\x17-\x02\x18/\x02\x191\x02\x1A3\x02\x1B5\x02\x1C" +
		"7\x02\x1D9\x02\x1E;\x02\x1F=\x02 ?\x02!A\x02\"C\x02#E\x02$G\x02%I\x02" +
		"&K\x02\'M\x02\x02O\x02\x02Q\x02(S\x02)\x03\x02\f\x03\x022;\x03\x0200\x04" +
		"\x02GGgg\x03\x02\x80\x80\n\x02$$))^^ddhhppttvv\x06\x02\f\f\x0F\x0F$$^" +
		"^\v\x02##%),1<<>B^^``~~\x80\x80\x04\x02C\\c|\x07\x02))2;C\\aac|\x05\x02" +
		"\v\f\x0F\x0F\"\"\x02\u0130\x02\x03\x03\x02\x02\x02\x02\x05\x03\x02\x02" +
		"\x02\x02\x07\x03\x02\x02\x02\x02\t\x03\x02\x02\x02\x02\v\x03\x02\x02\x02" +
		"\x02\r\x03\x02\x02\x02\x02\x0F\x03\x02\x02\x02\x02\x11\x03\x02\x02\x02" +
		"\x02\x13\x03\x02\x02\x02\x02\x15\x03\x02\x02\x02\x02\x17\x03\x02\x02\x02" +
		"\x02\x19\x03\x02\x02\x02\x02\x1B\x03\x02\x02\x02\x02\x1D\x03\x02\x02\x02" +
		"\x02\x1F\x03\x02\x02\x02\x02!\x03\x02\x02\x02\x02#\x03\x02\x02\x02\x02" +
		"%\x03\x02\x02\x02\x02\'\x03\x02\x02\x02\x02)\x03\x02\x02\x02\x02+\x03" +
		"\x02\x02\x02\x02-\x03\x02\x02\x02\x02/\x03\x02\x02\x02\x021\x03\x02\x02" +
		"\x02\x023\x03\x02\x02\x02\x025\x03\x02\x02\x02\x027\x03\x02\x02\x02\x02" +
		"9\x03\x02\x02\x02\x02;\x03\x02\x02\x02\x02=\x03\x02\x02\x02\x02?\x03\x02" +
		"\x02\x02\x02A\x03\x02\x02\x02\x02C\x03\x02\x02\x02\x02E\x03\x02\x02\x02" +
		"\x02G\x03\x02\x02\x02\x02I\x03\x02\x02\x02\x02K\x03\x02\x02\x02\x02Q\x03" +
		"\x02\x02\x02\x02S\x03\x02\x02\x02\x03U\x03\x02\x02\x02\x05W\x03\x02\x02" +
		"\x02\x07Y\x03\x02\x02\x02\t[\x03\x02\x02\x02\v_\x03\x02\x02\x02\rc\x03" +
		"\x02\x02\x02\x0Fe\x03\x02\x02\x02\x11g\x03\x02\x02\x02\x13j\x03\x02\x02" +
		"\x02\x15l\x03\x02\x02\x02\x17n\x03\x02\x02\x02\x19q\x03\x02\x02\x02\x1B" +
		"t\x03\x02\x02\x02\x1Dv\x03\x02\x02\x02\x1F~\x03\x02\x02\x02!\x85\x03\x02" +
		"\x02\x02#\x87\x03\x02\x02\x02%\x8A\x03\x02\x02\x02\'\x8F\x03\x02\x02\x02" +
		")\x94\x03\x02\x02\x02+\x98\x03\x02\x02\x02-\x9B\x03\x02\x02\x02/\x9F\x03" +
		"\x02\x02\x021\xA1\x03\x02\x02\x023\xA3\x03\x02\x02\x025\xA6\x03\x02\x02" +
		"\x027\xA9\x03\x02\x02\x029\xAB\x03\x02\x02\x02;\xAF\x03\x02\x02\x02=\xB3" +
		"\x03\x02\x02\x02?\xB7\x03\x02\x02\x02A\xBE\x03\x02\x02\x02C\xCB\x03\x02" +
		"\x02\x02E\xD3\x03\x02\x02\x02G\xE5\x03\x02\x02\x02I\xF0\x03\x02\x02\x02" +
		"K\u0108\x03\x02\x02\x02M\u010B\x03\x02\x02\x02O\u010F\x03\x02\x02\x02" +
		"Q\u0118\x03\x02\x02\x02S\u011B\x03\x02\x02\x02UV\x07<\x02\x02V\x04\x03" +
		"\x02\x02\x02WX\x07,\x02\x02X\x06\x03\x02\x02\x02YZ\x071\x02\x02Z\b\x03" +
		"\x02\x02\x02[\\\x07f\x02\x02\\]\x07k\x02\x02]^\x07x\x02\x02^\n\x03\x02" +
		"\x02\x02_`\x07o\x02\x02`a\x07q\x02\x02ab\x07f\x02\x02b\f\x03\x02\x02\x02" +
		"cd\x07-\x02\x02d\x0E\x03\x02\x02\x02ef\x07/\x02\x02f\x10\x03\x02\x02\x02" +
		"gh\x07>\x02\x02hi\x07@\x02\x02i\x12\x03\x02\x02\x02jk\x07>\x02\x02k\x14" +
		"\x03\x02\x02\x02lm\x07@\x02\x02m\x16\x03\x02\x02\x02no\x07>\x02\x02op" +
		"\x07?\x02\x02p\x18\x03\x02\x02\x02qr\x07@\x02\x02rs\x07?\x02\x02s\x1A" +
		"\x03\x02\x02\x02tu\x07?\x02\x02u\x1C\x03\x02\x02\x02vw\x07c\x02\x02wx" +
		"\x07p\x02\x02xy\x07f\x02\x02yz\x07c\x02\x02z{\x07n\x02\x02{|\x07u\x02" +
		"\x02|}\x07q\x02\x02}\x1E\x03\x02\x02\x02~\x7F\x07q\x02\x02\x7F\x80\x07" +
		"t\x02\x02\x80\x81\x07g\x02\x02\x81\x82\x07n\x02\x02\x82\x83\x07u\x02\x02" +
		"\x83\x84\x07g\x02\x02\x84 \x03\x02\x02\x02\x85\x86\x07`\x02\x02\x86\"" +
		"\x03\x02\x02\x02\x87\x88\x07k\x02\x02\x88\x89\x07h\x02\x02\x89$\x03\x02" +
		"\x02\x02\x8A\x8B\x07v\x02\x02\x8B\x8C\x07j\x02\x02\x8C\x8D\x07g\x02\x02" +
		"\x8D\x8E\x07p\x02\x02\x8E&\x03\x02\x02\x02\x8F\x90\x07g\x02\x02\x90\x91" +
		"\x07n\x02\x02\x91\x92\x07u\x02\x02\x92\x93\x07g\x02\x02\x93(\x03\x02\x02" +
		"\x02\x94\x95\x07n\x02\x02\x95\x96\x07g\x02\x02\x96\x97\x07v\x02\x02\x97" +
		"*\x03\x02\x02\x02\x98\x99\x07k\x02\x02\x99\x9A\x07p\x02\x02\x9A,\x03\x02" +
		"\x02\x02\x9B\x9C\x07g\x02\x02\x9C\x9D\x07p\x02\x02\x9D\x9E\x07f\x02\x02" +
		"\x9E.\x03\x02\x02\x02\x9F\xA0\x07*\x02\x02\xA00\x03\x02\x02\x02\xA1\xA2" +
		"\x07+\x02\x02\xA22\x03\x02\x02\x02\xA3\xA4\x07h\x02\x02\xA4\xA5\x07p\x02" +
		"\x02\xA54\x03\x02\x02\x02\xA6\xA7\x07?\x02\x02\xA7\xA8\x07@\x02\x02\xA8" +
		"6\x03\x02\x02\x02\xA9\xAA\x07=\x02\x02\xAA8\x03\x02\x02\x02\xAB\xAC\x07" +
		"x\x02\x02\xAC\xAD\x07c\x02\x02\xAD\xAE\x07n\x02\x02\xAE:\x03\x02\x02\x02" +
		"\xAF\xB0\x07t\x02\x02\xB0\xB1\x07g\x02\x02\xB1\xB2\x07e\x02\x02\xB2<\x03" +
		"\x02\x02\x02\xB3\xB4\x07h\x02\x02\xB4\xB5\x07w\x02\x02\xB5\xB6\x07p\x02" +
		"\x02\xB6>\x03\x02\x02\x02\xB7\xB8\x07n\x02\x02\xB8\xB9\x07q\x02\x02\xB9" +
		"\xBA\x07e\x02\x02\xBA\xBB\x07c\x02\x02\xBB\xBC\x07n\x02\x02\xBC@\x03\x02" +
		"\x02\x02\xBD\xBF\t\x02\x02\x02\xBE\xBD\x03\x02\x02\x02\xBF\xC0\x03\x02" +
		"\x02\x02\xC0\xBE\x03\x02\x02\x02\xC0\xC1\x03\x02\x02\x02\xC1B\x03\x02" +
		"\x02\x02\xC2\xC3\x07v\x02\x02\xC3\xC4\x07t\x02\x02\xC4\xC5\x07w\x02\x02" +
		"\xC5\xCC\x07g\x02\x02\xC6\xC7\x07h\x02\x02\xC7\xC8\x07c\x02\x02\xC8\xC9" +
		"\x07n\x02\x02\xC9\xCA\x07u\x02\x02\xCA\xCC\x07g\x02\x02\xCB\xC2\x03\x02" +
		"\x02\x02\xCB\xC6\x03\x02\x02\x02\xCCD\x03\x02\x02\x02\xCD\xCF\t\x02\x02" +
		"\x02\xCE\xCD\x03\x02\x02\x02\xCF\xD0\x03\x02\x02\x02\xD0\xCE\x03\x02\x02" +
		"\x02\xD0\xD1\x03\x02\x02\x02\xD1\xD2\x03\x02\x02\x02\xD2\xD4\t\x03\x02" +
		"\x02\xD3\xCE\x03\x02\x02\x02\xD3\xD4\x03\x02\x02\x02\xD4\xD6\x03\x02\x02" +
		"\x02\xD5\xD7\t\x02\x02\x02\xD6\xD5\x03\x02\x02\x02\xD7\xD8\x03\x02\x02" +
		"\x02\xD8\xD6\x03\x02\x02\x02\xD8\xD9\x03\x02\x02\x02\xD9\xE3\x03\x02\x02" +
		"\x02\xDA\xDC\t\x04\x02\x02\xDB\xDD\t\x05\x02\x02\xDC\xDB\x03\x02\x02\x02" +
		"\xDC\xDD\x03\x02\x02\x02\xDD\xDF\x03\x02\x02\x02\xDE\xE0\t\x02\x02\x02" +
		"\xDF\xDE\x03\x02\x02\x02\xE0\xE1\x03\x02\x02\x02\xE1\xDF\x03\x02\x02\x02" +
		"\xE1\xE2\x03\x02\x02\x02\xE2\xE4\x03\x02\x02\x02\xE3\xDA\x03\x02\x02\x02" +
		"\xE3\xE4\x03\x02\x02\x02\xE4F\x03\x02\x02\x02\xE5\xEB\x07$\x02\x02\xE6" +
		"\xE7\x07^\x02\x02\xE7\xEA\t\x06\x02\x02\xE8\xEA\n\x07\x02\x02\xE9\xE6" +
		"\x03\x02\x02\x02\xE9\xE8\x03\x02\x02\x02\xEA\xED\x03\x02\x02\x02\xEB\xE9" +
		"\x03\x02\x02\x02\xEB\xEC\x03\x02\x02\x02\xEC\xEE\x03\x02\x02\x02\xED\xEB" +
		"\x03\x02\x02\x02\xEE\xEF\x07$\x02\x02\xEFH\x03\x02\x02\x02\xF0\xF1\x07" +
		"*\x02\x02\xF1\xF2\x07+\x02\x02\xF2J\x03\x02\x02\x02\xF3\xF4\x07d\x02\x02" +
		"\xF4\xF5\x07q\x02\x02\xF5\xF6\x07q\x02\x02\xF6\u0109\x07n\x02\x02\xF7" +
		"\xF8\x07k\x02\x02\xF8\xF9\x07p\x02\x02\xF9\u0109\x07v\x02\x02\xFA\xFB" +
		"\x07t\x02\x02\xFB\xFC\x07g\x02\x02\xFC\xFD\x07c\x02\x02\xFD\u0109\x07" +
		"n\x02\x02\xFE\xFF\x07u\x02\x02\xFF\u0100\x07v\x02\x02\u0100\u0101\x07" +
		"t\x02\x02\u0101\u0102\x07k\x02\x02\u0102\u0103\x07p\x02\x02\u0103\u0109" +
		"\x07i\x02\x02\u0104\u0105\x07w\x02\x02\u0105\u0106\x07p\x02\x02\u0106" +
		"\u0107\x07k\x02\x02\u0107\u0109\x07v\x02\x02\u0108\xF3\x03\x02\x02\x02" +
		"\u0108\xF7\x03\x02\x02\x02\u0108\xFA\x03\x02\x02\x02\u0108\xFE\x03\x02" +
		"\x02\x02\u0108\u0104\x03\x02\x02\x02\u0109L\x03\x02\x02\x02\u010A\u010C" +
		"\t\b\x02\x02\u010B\u010A\x03\x02\x02\x02\u010C\u010D\x03\x02\x02\x02\u010D" +
		"\u010B\x03\x02\x02\x02\u010D\u010E\x03\x02\x02\x02\u010EN\x03\x02\x02" +
		"\x02\u010F\u0113\t\t\x02\x02\u0110\u0112\t\n\x02\x02\u0111\u0110\x03\x02" +
		"\x02\x02\u0112\u0115\x03\x02\x02\x02\u0113\u0111\x03\x02\x02\x02\u0113" +
		"\u0114\x03\x02\x02\x02\u0114P\x03\x02\x02\x02\u0115\u0113\x03\x02\x02" +
		"\x02\u0116\u0119\x05O(\x02\u0117\u0119\x05M\'\x02\u0118\u0116\x03\x02" +
		"\x02\x02\u0118\u0117\x03\x02\x02\x02\u0119R\x03\x02\x02\x02\u011A\u011C" +
		"\t\v\x02\x02\u011B\u011A\x03\x02\x02\x02\u011C\u011D\x03\x02\x02\x02\u011D" +
		"\u011B\x03\x02\x02\x02\u011D\u011E\x03\x02\x02\x02\u011E\u011F\x03\x02" +
		"\x02\x02\u011F\u0120\b*\x02\x02\u0120T\x03\x02\x02\x02\x12\x02\xC0\xCB" +
		"\xD0\xD3\xD8\xDC\xE1\xE3\xE9\xEB\u0108\u010D\u0113\u0118\u011D\x03\b\x02" +
		"\x02";
	public static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!CalcLexer.__ATN) {
			CalcLexer.__ATN = new ATNDeserializer().deserialize(Utils.toCharArray(CalcLexer._serializedATN));
		}

		return CalcLexer.__ATN;
	}

}

