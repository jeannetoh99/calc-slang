// Generated from ./src/lang/Calc.g4 by ANTLR 4.9.0-SNAPSHOT

import { ATN } from 'antlr4ts/atn/ATN'
import { ATNDeserializer } from 'antlr4ts/atn/ATNDeserializer'
import { LexerATNSimulator } from 'antlr4ts/atn/LexerATNSimulator'
import { CharStream } from 'antlr4ts/CharStream'
import { NotNull } from 'antlr4ts/Decorators'
import { Override } from 'antlr4ts/Decorators'
import { Lexer } from 'antlr4ts/Lexer'
import * as Utils from 'antlr4ts/misc/Utils'
import { RuleContext } from 'antlr4ts/RuleContext'
import { Vocabulary } from 'antlr4ts/Vocabulary'
import { VocabularyImpl } from 'antlr4ts/VocabularyImpl'

export class CalcLexer extends Lexer {
  public static readonly T__0 = 1
  public static readonly T__1 = 2
  public static readonly T__2 = 3
  public static readonly T__3 = 4
  public static readonly T__4 = 5
  public static readonly T__5 = 6
  public static readonly T__6 = 7
  public static readonly T__7 = 8
  public static readonly T__8 = 9
  public static readonly T__9 = 10
  public static readonly T__10 = 11
  public static readonly T__11 = 12
  public static readonly T__12 = 13
  public static readonly T__13 = 14
  public static readonly T__14 = 15
  public static readonly T__15 = 16
  public static readonly T__16 = 17
  public static readonly T__17 = 18
  public static readonly T__18 = 19
  public static readonly T__19 = 20
  public static readonly T__20 = 21
  public static readonly T__21 = 22
  public static readonly T__22 = 23
  public static readonly T__23 = 24
  public static readonly T__24 = 25
  public static readonly T__25 = 26
  public static readonly T__26 = 27
  public static readonly T__27 = 28
  public static readonly T__28 = 29
  public static readonly T__29 = 30
  public static readonly T__30 = 31
  public static readonly T__31 = 32
  public static readonly T__32 = 33
  public static readonly T__33 = 34
  public static readonly T__34 = 35
  public static readonly T__35 = 36
  public static readonly T__36 = 37
  public static readonly T__37 = 38
  public static readonly T__38 = 39
  public static readonly T__39 = 40
  public static readonly T__40 = 41
  public static readonly T__41 = 42
  public static readonly T__42 = 43
  public static readonly INTEGER_LITERAL = 44
  public static readonly BOOLEAN_LITERAL = 45
  public static readonly REAL_LITERAL = 46
  public static readonly STRING_LITERAL = 47
  public static readonly UNIT_LITERAL = 48
  public static readonly NIL = 49
  public static readonly IDENTIFIER = 50
  public static readonly WHITESPACE = 51
  public static readonly WILDCARD = 52

  // tslint:disable:no-trailing-whitespace
  public static readonly channelNames: string[] = ['DEFAULT_TOKEN_CHANNEL', 'HIDDEN']

  // tslint:disable:no-trailing-whitespace
  public static readonly modeNames: string[] = ['DEFAULT_MODE']

  public static readonly ruleNames: string[] = [
    'T__0',
    'T__1',
    'T__2',
    'T__3',
    'T__4',
    'T__5',
    'T__6',
    'T__7',
    'T__8',
    'T__9',
    'T__10',
    'T__11',
    'T__12',
    'T__13',
    'T__14',
    'T__15',
    'T__16',
    'T__17',
    'T__18',
    'T__19',
    'T__20',
    'T__21',
    'T__22',
    'T__23',
    'T__24',
    'T__25',
    'T__26',
    'T__27',
    'T__28',
    'T__29',
    'T__30',
    'T__31',
    'T__32',
    'T__33',
    'T__34',
    'T__35',
    'T__36',
    'T__37',
    'T__38',
    'T__39',
    'T__40',
    'T__41',
    'T__42',
    'INTEGER_LITERAL',
    'BOOLEAN_LITERAL',
    'REAL_LITERAL',
    'STRING_LITERAL',
    'UNIT_LITERAL',
    'NIL',
    'SYMBOLIC_IDENTIFIER',
    'ALPHANUMERIC_IDENTIFIER',
    'IDENTIFIER',
    'WHITESPACE',
    'WILDCARD'
  ]

  private static readonly _LITERAL_NAMES: Array<string | undefined> = [
    undefined,
    "'bool'",
    "'int'",
    "'real'",
    "'string'",
    "'unit'",
    "'list'",
    "'->'",
    "'*'",
    "'('",
    "')'",
    "'::'",
    "':'",
    "'/'",
    "'div'",
    "'mod'",
    "'+'",
    "'-'",
    "'<>'",
    "'<'",
    "'>'",
    "'<='",
    "'>='",
    "'='",
    "'andalso'",
    "'orelse'",
    "'^'",
    "'@'",
    "'if'",
    "'then'",
    "'else'",
    "'let'",
    "'in'",
    "'end'",
    "','",
    "'['",
    "']'",
    "'fn'",
    "'=>'",
    "';'",
    "'val'",
    "'rec'",
    "'fun'",
    "'local'",
    undefined,
    undefined,
    undefined,
    undefined,
    "'()'",
    undefined,
    undefined,
    undefined,
    "'_'"
  ]
  private static readonly _SYMBOLIC_NAMES: Array<string | undefined> = [
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    'INTEGER_LITERAL',
    'BOOLEAN_LITERAL',
    'REAL_LITERAL',
    'STRING_LITERAL',
    'UNIT_LITERAL',
    'NIL',
    'IDENTIFIER',
    'WHITESPACE',
    'WILDCARD'
  ]
  public static readonly VOCABULARY: Vocabulary = new VocabularyImpl(
    CalcLexer._LITERAL_NAMES,
    CalcLexer._SYMBOLIC_NAMES,
    []
  )

  // @Override
  // @NotNull
  public get vocabulary(): Vocabulary {
    return CalcLexer.VOCABULARY
  }
  // tslint:enable:no-trailing-whitespace

  constructor(input: CharStream) {
    super(input)
    this._interp = new LexerATNSimulator(CalcLexer._ATN, this)
  }

  // @Override
  public get grammarFileName(): string {
    return 'Calc.g4'
  }

  // @Override
  public get ruleNames(): string[] {
    return CalcLexer.ruleNames
  }

  // @Override
  public get serializedATN(): string {
    return CalcLexer._serializedATN
  }

  // @Override
  public get channelNames(): string[] {
    return CalcLexer.channelNames
  }

  // @Override
  public get modeNames(): string[] {
    return CalcLexer.modeNames
  }

  public static readonly _serializedATN: string =
    '\x03\uC91D\uCABA\u058D\uAFBA\u4F53\u0607\uEA8B\uC241\x026\u0160\b\x01' +
    '\x04\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06' +
    '\x04\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f\x04\r' +
    '\t\r\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04\x12\t' +
    '\x12\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16\x04\x17\t' +
    '\x17\x04\x18\t\x18\x04\x19\t\x19\x04\x1A\t\x1A\x04\x1B\t\x1B\x04\x1C\t' +
    '\x1C\x04\x1D\t\x1D\x04\x1E\t\x1E\x04\x1F\t\x1F\x04 \t \x04!\t!\x04"\t' +
    "\"\x04#\t#\x04$\t$\x04%\t%\x04&\t&\x04'\t'\x04(\t(\x04)\t)\x04*\t*\x04" +
    '+\t+\x04,\t,\x04-\t-\x04.\t.\x04/\t/\x040\t0\x041\t1\x042\t2\x043\t3\x04' +
    '4\t4\x045\t5\x046\t6\x047\t7\x03\x02\x03\x02\x03\x02\x03\x02\x03\x02\x03' +
    '\x03\x03\x03\x03\x03\x03\x03\x03\x04\x03\x04\x03\x04\x03\x04\x03\x04\x03' +
    '\x05\x03\x05\x03\x05\x03\x05\x03\x05\x03\x05\x03\x05\x03\x06\x03\x06\x03' +
    '\x06\x03\x06\x03\x06\x03\x07\x03\x07\x03\x07\x03\x07\x03\x07\x03\b\x03' +
    '\b\x03\b\x03\t\x03\t\x03\n\x03\n\x03\v\x03\v\x03\f\x03\f\x03\f\x03\r\x03' +
    '\r\x03\x0E\x03\x0E\x03\x0F\x03\x0F\x03\x0F\x03\x0F\x03\x10\x03\x10\x03' +
    '\x10\x03\x10\x03\x11\x03\x11\x03\x12\x03\x12\x03\x13\x03\x13\x03\x13\x03' +
    '\x14\x03\x14\x03\x15\x03\x15\x03\x16\x03\x16\x03\x16\x03\x17\x03\x17\x03' +
    '\x17\x03\x18\x03\x18\x03\x19\x03\x19\x03\x19\x03\x19\x03\x19\x03\x19\x03' +
    '\x19\x03\x19\x03\x1A\x03\x1A\x03\x1A\x03\x1A\x03\x1A\x03\x1A\x03\x1A\x03' +
    '\x1B\x03\x1B\x03\x1C\x03\x1C\x03\x1D\x03\x1D\x03\x1D\x03\x1E\x03\x1E\x03' +
    '\x1E\x03\x1E\x03\x1E\x03\x1F\x03\x1F\x03\x1F\x03\x1F\x03\x1F\x03 \x03' +
    ' \x03 \x03 \x03!\x03!\x03!\x03"\x03"\x03"\x03"\x03#\x03#\x03$\x03' +
    "$\x03%\x03%\x03&\x03&\x03&\x03'\x03'\x03'\x03(\x03(\x03)\x03)\x03)" +
    '\x03)\x03*\x03*\x03*\x03*\x03+\x03+\x03+\x03+\x03,\x03,\x03,\x03,\x03' +
    ',\x03,\x03-\x06-\u0106\n-\r-\x0E-\u0107\x03.\x03.\x03.\x03.\x03.\x03.' +
    '\x03.\x03.\x03.\x05.\u0113\n.\x03/\x06/\u0116\n/\r/\x0E/\u0117\x03/\x05' +
    '/\u011B\n/\x03/\x06/\u011E\n/\r/\x0E/\u011F\x03/\x03/\x05/\u0124\n/\x03' +
    '/\x06/\u0127\n/\r/\x0E/\u0128\x05/\u012B\n/\x030\x030\x030\x030\x070\u0131' +
    '\n0\f0\x0E0\u0134\v0\x030\x030\x031\x031\x031\x032\x032\x032\x032\x03' +
    '2\x072\u0140\n2\f2\x0E2\u0143\v2\x032\x052\u0146\n2\x033\x063\u0149\n' +
    '3\r3\x0E3\u014A\x034\x034\x074\u014F\n4\f4\x0E4\u0152\v4\x035\x035\x05' +
    '5\u0156\n5\x036\x066\u0159\n6\r6\x0E6\u015A\x036\x036\x037\x037\x02\x02' +
    '\x028\x03\x02\x03\x05\x02\x04\x07\x02\x05\t\x02\x06\v\x02\x07\r\x02\b' +
    '\x0F\x02\t\x11\x02\n\x13\x02\v\x15\x02\f\x17\x02\r\x19\x02\x0E\x1B\x02' +
    "\x0F\x1D\x02\x10\x1F\x02\x11!\x02\x12#\x02\x13%\x02\x14'\x02\x15)\x02" +
    '\x16+\x02\x17-\x02\x18/\x02\x191\x02\x1A3\x02\x1B5\x02\x1C7\x02\x1D9\x02' +
    '\x1E;\x02\x1F=\x02 ?\x02!A\x02"C\x02#E\x02$G\x02%I\x02&K\x02\'M\x02(' +
    'O\x02)Q\x02*S\x02+U\x02,W\x02-Y\x02.[\x02/]\x020_\x021a\x022c\x023e\x02' +
    '\x02g\x02\x02i\x024k\x025m\x026\x03\x02\f\x03\x022;\x03\x0200\x04\x02' +
    'GGgg\x03\x02\x80\x80\n\x02$$))^^ddhhppttvv\x06\x02\f\f\x0F\x0F$$^^\v\x02' +
    '##%),1<<>B^^``~~\x80\x80\x04\x02C\\c|\x07\x02))2;C\\aac|\x05\x02\v\f\x0F' +
    '\x0F""\x02\u016D\x02\x03\x03\x02\x02\x02\x02\x05\x03\x02\x02\x02\x02' +
    '\x07\x03\x02\x02\x02\x02\t\x03\x02\x02\x02\x02\v\x03\x02\x02\x02\x02\r' +
    '\x03\x02\x02\x02\x02\x0F\x03\x02\x02\x02\x02\x11\x03\x02\x02\x02\x02\x13' +
    '\x03\x02\x02\x02\x02\x15\x03\x02\x02\x02\x02\x17\x03\x02\x02\x02\x02\x19' +
    '\x03\x02\x02\x02\x02\x1B\x03\x02\x02\x02\x02\x1D\x03\x02\x02\x02\x02\x1F' +
    '\x03\x02\x02\x02\x02!\x03\x02\x02\x02\x02#\x03\x02\x02\x02\x02%\x03\x02' +
    "\x02\x02\x02'\x03\x02\x02\x02\x02)\x03\x02\x02\x02\x02+\x03\x02\x02\x02" +
    '\x02-\x03\x02\x02\x02\x02/\x03\x02\x02\x02\x021\x03\x02\x02\x02\x023\x03' +
    '\x02\x02\x02\x025\x03\x02\x02\x02\x027\x03\x02\x02\x02\x029\x03\x02\x02' +
    '\x02\x02;\x03\x02\x02\x02\x02=\x03\x02\x02\x02\x02?\x03\x02\x02\x02\x02' +
    'A\x03\x02\x02\x02\x02C\x03\x02\x02\x02\x02E\x03\x02\x02\x02\x02G\x03\x02' +
    '\x02\x02\x02I\x03\x02\x02\x02\x02K\x03\x02\x02\x02\x02M\x03\x02\x02\x02' +
    '\x02O\x03\x02\x02\x02\x02Q\x03\x02\x02\x02\x02S\x03\x02\x02\x02\x02U\x03' +
    '\x02\x02\x02\x02W\x03\x02\x02\x02\x02Y\x03\x02\x02\x02\x02[\x03\x02\x02' +
    '\x02\x02]\x03\x02\x02\x02\x02_\x03\x02\x02\x02\x02a\x03\x02\x02\x02\x02' +
    'c\x03\x02\x02\x02\x02i\x03\x02\x02\x02\x02k\x03\x02\x02\x02\x02m\x03\x02' +
    '\x02\x02\x03o\x03\x02\x02\x02\x05t\x03\x02\x02\x02\x07x\x03\x02\x02\x02' +
    '\t}\x03\x02\x02\x02\v\x84\x03\x02\x02\x02\r\x89\x03\x02\x02\x02\x0F\x8E' +
    '\x03\x02\x02\x02\x11\x91\x03\x02\x02\x02\x13\x93\x03\x02\x02\x02\x15\x95' +
    '\x03\x02\x02\x02\x17\x97\x03\x02\x02\x02\x19\x9A\x03\x02\x02\x02\x1B\x9C' +
    '\x03\x02\x02\x02\x1D\x9E\x03\x02\x02\x02\x1F\xA2\x03\x02\x02\x02!\xA6' +
    "\x03\x02\x02\x02#\xA8\x03\x02\x02\x02%\xAA\x03\x02\x02\x02'\xAD\x03\x02" +
    '\x02\x02)\xAF\x03\x02\x02\x02+\xB1\x03\x02\x02\x02-\xB4\x03\x02\x02\x02' +
    '/\xB7\x03\x02\x02\x021\xB9\x03\x02\x02\x023\xC1\x03\x02\x02\x025\xC8\x03' +
    '\x02\x02\x027\xCA\x03\x02\x02\x029\xCC\x03\x02\x02\x02;\xCF\x03\x02\x02' +
    '\x02=\xD4\x03\x02\x02\x02?\xD9\x03\x02\x02\x02A\xDD\x03\x02\x02\x02C\xE0' +
    '\x03\x02\x02\x02E\xE4\x03\x02\x02\x02G\xE6\x03\x02\x02\x02I\xE8\x03\x02' +
    '\x02\x02K\xEA\x03\x02\x02\x02M\xED\x03\x02\x02\x02O\xF0\x03\x02\x02\x02' +
    'Q\xF2\x03\x02\x02\x02S\xF6\x03\x02\x02\x02U\xFA\x03\x02\x02\x02W\xFE\x03' +
    '\x02\x02\x02Y\u0105\x03\x02\x02\x02[\u0112\x03\x02\x02\x02]\u011A\x03' +
    '\x02\x02\x02_\u012C\x03\x02\x02\x02a\u0137\x03\x02\x02\x02c\u0145\x03' +
    '\x02\x02\x02e\u0148\x03\x02\x02\x02g\u014C\x03\x02\x02\x02i\u0155\x03' +
    '\x02\x02\x02k\u0158\x03\x02\x02\x02m\u015E\x03\x02\x02\x02op\x07d\x02' +
    '\x02pq\x07q\x02\x02qr\x07q\x02\x02rs\x07n\x02\x02s\x04\x03\x02\x02\x02' +
    'tu\x07k\x02\x02uv\x07p\x02\x02vw\x07v\x02\x02w\x06\x03\x02\x02\x02xy\x07' +
    't\x02\x02yz\x07g\x02\x02z{\x07c\x02\x02{|\x07n\x02\x02|\b\x03\x02\x02' +
    '\x02}~\x07u\x02\x02~\x7F\x07v\x02\x02\x7F\x80\x07t\x02\x02\x80\x81\x07' +
    'k\x02\x02\x81\x82\x07p\x02\x02\x82\x83\x07i\x02\x02\x83\n\x03\x02\x02' +
    '\x02\x84\x85\x07w\x02\x02\x85\x86\x07p\x02\x02\x86\x87\x07k\x02\x02\x87' +
    '\x88\x07v\x02\x02\x88\f\x03\x02\x02\x02\x89\x8A\x07n\x02\x02\x8A\x8B\x07' +
    'k\x02\x02\x8B\x8C\x07u\x02\x02\x8C\x8D\x07v\x02\x02\x8D\x0E\x03\x02\x02' +
    '\x02\x8E\x8F\x07/\x02\x02\x8F\x90\x07@\x02\x02\x90\x10\x03\x02\x02\x02' +
    '\x91\x92\x07,\x02\x02\x92\x12\x03\x02\x02\x02\x93\x94\x07*\x02\x02\x94' +
    '\x14\x03\x02\x02\x02\x95\x96\x07+\x02\x02\x96\x16\x03\x02\x02\x02\x97' +
    '\x98\x07<\x02\x02\x98\x99\x07<\x02\x02\x99\x18\x03\x02\x02\x02\x9A\x9B' +
    '\x07<\x02\x02\x9B\x1A\x03\x02\x02\x02\x9C\x9D\x071\x02\x02\x9D\x1C\x03' +
    '\x02\x02\x02\x9E\x9F\x07f\x02\x02\x9F\xA0\x07k\x02\x02\xA0\xA1\x07x\x02' +
    '\x02\xA1\x1E\x03\x02\x02\x02\xA2\xA3\x07o\x02\x02\xA3\xA4\x07q\x02\x02' +
    '\xA4\xA5\x07f\x02\x02\xA5 \x03\x02\x02\x02\xA6\xA7\x07-\x02\x02\xA7"' +
    '\x03\x02\x02\x02\xA8\xA9\x07/\x02\x02\xA9$\x03\x02\x02\x02\xAA\xAB\x07' +
    '>\x02\x02\xAB\xAC\x07@\x02\x02\xAC&\x03\x02\x02\x02\xAD\xAE\x07>\x02\x02' +
    '\xAE(\x03\x02\x02\x02\xAF\xB0\x07@\x02\x02\xB0*\x03\x02\x02\x02\xB1\xB2' +
    '\x07>\x02\x02\xB2\xB3\x07?\x02\x02\xB3,\x03\x02\x02\x02\xB4\xB5\x07@\x02' +
    '\x02\xB5\xB6\x07?\x02\x02\xB6.\x03\x02\x02\x02\xB7\xB8\x07?\x02\x02\xB8' +
    '0\x03\x02\x02\x02\xB9\xBA\x07c\x02\x02\xBA\xBB\x07p\x02\x02\xBB\xBC\x07' +
    'f\x02\x02\xBC\xBD\x07c\x02\x02\xBD\xBE\x07n\x02\x02\xBE\xBF\x07u\x02\x02' +
    '\xBF\xC0\x07q\x02\x02\xC02\x03\x02\x02\x02\xC1\xC2\x07q\x02\x02\xC2\xC3' +
    '\x07t\x02\x02\xC3\xC4\x07g\x02\x02\xC4\xC5\x07n\x02\x02\xC5\xC6\x07u\x02' +
    '\x02\xC6\xC7\x07g\x02\x02\xC74\x03\x02\x02\x02\xC8\xC9\x07`\x02\x02\xC9' +
    '6\x03\x02\x02\x02\xCA\xCB\x07B\x02\x02\xCB8\x03\x02\x02\x02\xCC\xCD\x07' +
    'k\x02\x02\xCD\xCE\x07h\x02\x02\xCE:\x03\x02\x02\x02\xCF\xD0\x07v\x02\x02' +
    '\xD0\xD1\x07j\x02\x02\xD1\xD2\x07g\x02\x02\xD2\xD3\x07p\x02\x02\xD3<\x03' +
    '\x02\x02\x02\xD4\xD5\x07g\x02\x02\xD5\xD6\x07n\x02\x02\xD6\xD7\x07u\x02' +
    '\x02\xD7\xD8\x07g\x02\x02\xD8>\x03\x02\x02\x02\xD9\xDA\x07n\x02\x02\xDA' +
    '\xDB\x07g\x02\x02\xDB\xDC\x07v\x02\x02\xDC@\x03\x02\x02\x02\xDD\xDE\x07' +
    'k\x02\x02\xDE\xDF\x07p\x02\x02\xDFB\x03\x02\x02\x02\xE0\xE1\x07g\x02\x02' +
    '\xE1\xE2\x07p\x02\x02\xE2\xE3\x07f\x02\x02\xE3D\x03\x02\x02\x02\xE4\xE5' +
    '\x07.\x02\x02\xE5F\x03\x02\x02\x02\xE6\xE7\x07]\x02\x02\xE7H\x03\x02\x02' +
    '\x02\xE8\xE9\x07_\x02\x02\xE9J\x03\x02\x02\x02\xEA\xEB\x07h\x02\x02\xEB' +
    '\xEC\x07p\x02\x02\xECL\x03\x02\x02\x02\xED\xEE\x07?\x02\x02\xEE\xEF\x07' +
    '@\x02\x02\xEFN\x03\x02\x02\x02\xF0\xF1\x07=\x02\x02\xF1P\x03\x02\x02\x02' +
    '\xF2\xF3\x07x\x02\x02\xF3\xF4\x07c\x02\x02\xF4\xF5\x07n\x02\x02\xF5R\x03' +
    '\x02\x02\x02\xF6\xF7\x07t\x02\x02\xF7\xF8\x07g\x02\x02\xF8\xF9\x07e\x02' +
    '\x02\xF9T\x03\x02\x02\x02\xFA\xFB\x07h\x02\x02\xFB\xFC\x07w\x02\x02\xFC' +
    '\xFD\x07p\x02\x02\xFDV\x03\x02\x02\x02\xFE\xFF\x07n\x02\x02\xFF\u0100' +
    '\x07q\x02\x02\u0100\u0101\x07e\x02\x02\u0101\u0102\x07c\x02\x02\u0102' +
    '\u0103\x07n\x02\x02\u0103X\x03\x02\x02\x02\u0104\u0106\t\x02\x02\x02\u0105' +
    '\u0104\x03\x02\x02\x02\u0106\u0107\x03\x02\x02\x02\u0107\u0105\x03\x02' +
    '\x02\x02\u0107\u0108\x03\x02\x02\x02\u0108Z\x03\x02\x02\x02\u0109\u010A' +
    '\x07v\x02\x02\u010A\u010B\x07t\x02\x02\u010B\u010C\x07w\x02\x02\u010C' +
    '\u0113\x07g\x02\x02\u010D\u010E\x07h\x02\x02\u010E\u010F\x07c\x02\x02' +
    '\u010F\u0110\x07n\x02\x02\u0110\u0111\x07u\x02\x02\u0111\u0113\x07g\x02' +
    '\x02\u0112\u0109\x03\x02\x02\x02\u0112\u010D\x03\x02\x02\x02\u0113\\\x03' +
    '\x02\x02\x02\u0114\u0116\t\x02\x02\x02\u0115\u0114\x03\x02\x02\x02\u0116' +
    '\u0117\x03\x02\x02\x02\u0117\u0115\x03\x02\x02\x02\u0117\u0118\x03\x02' +
    '\x02\x02\u0118\u0119\x03\x02\x02\x02\u0119\u011B\t\x03\x02\x02\u011A\u0115' +
    '\x03\x02\x02\x02\u011A\u011B\x03\x02\x02\x02\u011B\u011D\x03\x02\x02\x02' +
    '\u011C\u011E\t\x02\x02\x02\u011D\u011C\x03\x02\x02\x02\u011E\u011F\x03' +
    '\x02\x02\x02\u011F\u011D\x03\x02\x02\x02\u011F\u0120\x03\x02\x02\x02\u0120' +
    '\u012A\x03\x02\x02\x02\u0121\u0123\t\x04\x02\x02\u0122\u0124\t\x05\x02' +
    '\x02\u0123\u0122\x03\x02\x02\x02\u0123\u0124\x03\x02\x02\x02\u0124\u0126' +
    '\x03\x02\x02\x02\u0125\u0127\t\x02\x02\x02\u0126\u0125\x03\x02\x02\x02' +
    '\u0127\u0128\x03\x02\x02\x02\u0128\u0126\x03\x02\x02\x02\u0128\u0129\x03' +
    '\x02\x02\x02\u0129\u012B\x03\x02\x02\x02\u012A\u0121\x03\x02\x02\x02\u012A' +
    '\u012B\x03\x02\x02\x02\u012B^\x03\x02\x02\x02\u012C\u0132\x07$\x02\x02' +
    '\u012D\u012E\x07^\x02\x02\u012E\u0131\t\x06\x02\x02\u012F\u0131\n\x07' +
    '\x02\x02\u0130\u012D\x03\x02\x02\x02\u0130\u012F\x03\x02\x02\x02\u0131' +
    '\u0134\x03\x02\x02\x02\u0132\u0130\x03\x02\x02\x02\u0132\u0133\x03\x02' +
    '\x02\x02\u0133\u0135\x03\x02\x02\x02\u0134\u0132\x03\x02\x02\x02\u0135' +
    '\u0136\x07$\x02\x02\u0136`\x03\x02\x02\x02\u0137\u0138\x07*\x02\x02\u0138' +
    '\u0139\x07+\x02\x02\u0139b\x03\x02\x02\x02\u013A\u013B\x07p\x02\x02\u013B' +
    '\u013C\x07k\x02\x02\u013C\u0146\x07n\x02\x02\u013D\u0141\x07]\x02\x02' +
    '\u013E\u0140\x05k6\x02\u013F\u013E\x03\x02\x02\x02\u0140\u0143\x03\x02' +
    '\x02\x02\u0141\u013F\x03\x02\x02\x02\u0141\u0142\x03\x02\x02\x02\u0142' +
    '\u0144\x03\x02\x02\x02\u0143\u0141\x03\x02\x02\x02\u0144\u0146\x07_\x02' +
    '\x02\u0145\u013A\x03\x02\x02\x02\u0145\u013D\x03\x02\x02\x02\u0146d\x03' +
    '\x02\x02\x02\u0147\u0149\t\b\x02\x02\u0148\u0147\x03\x02\x02\x02\u0149' +
    '\u014A\x03\x02\x02\x02\u014A\u0148\x03\x02\x02\x02\u014A\u014B\x03\x02' +
    '\x02\x02\u014Bf\x03\x02\x02\x02\u014C\u0150\t\t\x02\x02\u014D\u014F\t' +
    '\n\x02\x02\u014E\u014D\x03\x02\x02\x02\u014F\u0152\x03\x02\x02\x02\u0150' +
    '\u014E\x03\x02\x02\x02\u0150\u0151\x03\x02\x02\x02\u0151h\x03\x02\x02' +
    '\x02\u0152\u0150\x03\x02\x02\x02\u0153\u0156\x05g4\x02\u0154\u0156\x05' +
    'e3\x02\u0155\u0153\x03\x02\x02\x02\u0155\u0154\x03\x02\x02\x02\u0156j' +
    '\x03\x02\x02\x02\u0157\u0159\t\v\x02\x02\u0158\u0157\x03\x02\x02\x02\u0159' +
    '\u015A\x03\x02\x02\x02\u015A\u0158\x03\x02\x02\x02\u015A\u015B\x03\x02' +
    '\x02\x02\u015B\u015C\x03\x02\x02\x02\u015C\u015D\b6\x02\x02\u015Dl\x03' +
    '\x02\x02\x02\u015E\u015F\x07a\x02\x02\u015Fn\x03\x02\x02\x02\x13\x02\u0107' +
    '\u0112\u0117\u011A\u011F\u0123\u0128\u012A\u0130\u0132\u0141\u0145\u014A' +
    '\u0150\u0155\u015A\x03\b\x02\x02'
  public static __ATN: ATN
  public static get _ATN(): ATN {
    if (!CalcLexer.__ATN) {
      CalcLexer.__ATN = new ATNDeserializer().deserialize(
        Utils.toCharArray(CalcLexer._serializedATN)
      )
    }

    return CalcLexer.__ATN
  }
}
